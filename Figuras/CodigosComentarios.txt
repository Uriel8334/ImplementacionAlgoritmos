

//atributos de la clase
private int alto, ancho;
private int pasos;

//constructor con parametros de los atributos de la clase 
public CurvedLinesRhombus(int alto, int ancho, int pasos)
{
    this.alto = alto;
    this.ancho = ancho;
    this.pasos = pasos;
}

//metodo para dibujar la figura 
public void Draw(PictureBox pictureBox)
{
    //debemos crear un objeto Graphics para dibujar la figura
    Graphics g = pictureBox.CreateGraphics();
    //debemos crear un objeto Pen para dibujar la figura
    Pen pen = new Pen(Color.Black, 2);

    //debemos entender la logica para la estrella romboidal
    //agregamos un punto central del PictureBox 
    Point center = new Point(pictureBox.Width / 2, pictureBox.Height / 2);
    //dibujamos un punto de referencia para center para saber que es correcta el planteamiento
    g.DrawEllipse(pen, center.X - 2, center.Y - 2, 4, 4); // Dibuja un pequeño círculo en el centro

    //debemos crear los extremos donde se van a posicionar los puntos de la figura
    //punto arriba
    Point top = new Point(center.X, center.Y - pictureBox.Height / 2);
    //dibujamos un punto de referencia para right para saber que es correcta el planteamiento
    g.DrawEllipse(pen, top.X - 2, top.Y - 2, 4, 4); // Dibuja un pequeño círculo en el punto superior

    //punto abajo
    Point bottom = new Point(center.X, center.Y + pictureBox.Height / 2);
    //dibujamos un punto de referencia para right para saber que es correcta el planteamiento
    g.DrawEllipse(pen, bottom.X - 2, bottom.Y - 2, 4, 4); // Dibuja un pequeño círculo en el punto inferior

    //punto izquierda
    Point left = new Point(center.X - pictureBox.Width / 2, center.Y);
    //dibujamos un punto de referencia para right para saber que es correcta el planteamiento
    g.DrawEllipse(pen, left.X - 2, left.Y - 2, 4, 4); // Dibuja un pequeño círculo en el punto izquierdo

    //punto derecha
    Point right = new Point(center.X + pictureBox.Width / 2, center.Y);
    //dibujamos un punto de referencia para right para saber que es correcta el planteamiento
    g.DrawEllipse(pen, right.X - 2, right.Y - 2, 4, 4); // Dibuja un pequeño círculo en el punto derecho

    //debemos comprender que la figura es una estrella romboidal
    // por lo tanto si queremos que la figura se trace con lineas rectas debemos apuntar a los extremos y luego al centro,
    // luego desde el punto x,y = 0,0 el segundo punto seria x,y = 0,0+1 esto de forma iterativa usando un for 

    //iteracion del for
    for (int i = 0; i < pasos; i++)
    {
        //debemos crear un punto en el centro de la figura
        Point centerPoint = new Point(center.X, center.Y);
        //debemos crear un punto en el extremo de la figura
        Point topPoint = new Point(top.X, top.Y + i);
        //dibujamos la figura
        g.DrawLine(pen, centerPoint, topPoint);
        //dibujamos la figura
        g.DrawLine(pen, centerPoint, bottom);
        //dibujamos la figura
        g.DrawLine(pen, centerPoint, left);
        //dibujamos la figura
        g.DrawLine(pen, centerPoint, right);

    }

    //se propone 4 cuadrantes para dibujar la figura 
    //for para dibujar la figura, cuadrante 1 parte superior derecha
    // Replacing the problematic line with the correct usage of Point structure
    for (int i = 0; i < pasos; i++)
    {
        // Adjusting the topPoint to be a valid Point structure
        Point topPoint = new Point(top.X, top.Y - i);

        // Correcting the DrawLine method to use valid Point arguments
        g.DrawLine(pen, new Point(center.X + i, center.Y), topPoint);
    }

    //para el cuadrante superior izquierdo 
    for (int i = 0; i < pasos; i++)
    {
        //el planteamiento del for es diferente ya que se requiere algo similar pero los puntos de conexion son diferentes
        Point topPoint = new Point(top.X, top.Y - i);
        //cambiamos el punto x,y = 0,0+1 por el punto x,y = 0,0-1, para que visualmente se vaya hacia la izquierda
        g.DrawLine(pen, new Point(center.X - i, center.Y), topPoint);
    }

    //para el cuadrante inferior izquierdo
    for (int i = 0; i < pasos; i++)
    {
        //el planteamiento del for es diferente ya que se requiere algo similar pero los puntos de conexion son diferentes
        Point bottomPoint = new Point(bottom.X, bottom.Y + i);
        //cambiamos el punto ahora desde la parte de abajo para que vaya subiendo pero el punto central va a ir yendo hacia la izquierda
        g.DrawLine(pen, new Point(center.X + i, center.Y), bottomPoint);
    }

    //para el cuadrante inferior derecho
    for (int i = 0; i < pasos; i++)
    {
        //el planteamiento del for es diferente ya que se requiere algo similar pero los puntos de conexion son diferentes
        Point bottomPoint = new Point(bottom.X, bottom.Y + i);
        //cambiamos el punto ahora desde la parte de abajo para que vaya subiendo pero que el punto central vaya yendo hacia
        //la derecha
        g.DrawLine(pen, new Point(center.X - i, center.Y), bottomPoint);
    }
}